{"version":3,"sources":["components/Notification/Notification.module.scss","components/Feedback/Feedback.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Feedback/FeedBack.module.scss","components/Section/Section.module.scss","components/Statistics/Statistics.module.scss"],"names":["module","exports","Notification","propTypes","options","PropTypes","objectOf","shape","good","string","isRequired","neutral","bad","FeedbackOptions","className","s","FeedBackList","Button","onClick","Section","children","title","Container","Title","Statistics","total","positivePercentage","StatisticsList","message","App","state","goodValue","neutralValue","badValue","totalValue","positiveFeedbackValue","blockVision","goodIncrement","setState","prevState","countTotalFeedback","neutralIncrement","badIncrement","countPositiveFeedbackPercentage","Feedback","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17f287eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__14z9I\"};","import PropTypes from 'prop-types';\nimport s from './FeedBack.module.scss';\n\nconst FeedbackOptions = ({ options }) => {\n  return (\n    <ul className={s.FeedBackList}>\n      <li>\n        <button className={s.Button} onClick={options.good}>\n          Good\n        </button>\n      </li>\n      <li>\n        <button className={s.Button} onClick={options.neutral}>\n          Neutral\n        </button>\n      </li>\n      <li>\n        <button className={s.Button} onClick={options.bad}>\n          Bad\n        </button>\n      </li>\n    </ul>\n  );\n};\n\nNotification.propTypes = {\n  options: PropTypes.objectOf(\n    PropTypes.shape({\n      good: PropTypes.string.isRequired,\n      neutral: PropTypes.string.isRequired,\n      bad: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.scss';\n\nconst Section = ({ children, title }) => {\n  return (\n    <section className={s.Section}>\n      <div className={s.Container}>\n        <h2 className={s.Title}>{title}</h2>\n        {children}\n      </div>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.scss';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={s.StatisticsList}>\n      <li>\n        <p>\n          Good: <span>{good}</span>\n        </p>\n      </li>\n      <li>\n        <p>\n          Neutral: <span>{neutral}</span>\n        </p>\n      </li>\n      <li>\n        <p>\n          Bad: <span>{bad}</span>\n        </p>\n      </li>\n      <li>\n        <p>\n          Total: <span>{total}</span>\n        </p>\n      </li>\n      <li>\n        <p>\n          Positive feedback: <span>{positivePercentage}%</span>\n        </p>\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.scss';\nconst Notification = ({ message }) => {\n  return <p className={s.Notification}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React from 'react';\nimport FeedbackOptions from './components/Feedback/Feedback';\nimport Section from 'components/Section/Section';\nimport Statistics from 'components/Statistics/Statistics';\nimport Notification from 'components/Notification/Notification';\nclass App extends React.Component {\n  state = {\n    goodValue: 0,\n    neutralValue: 0,\n    badValue: 0,\n    totalValue: 0,\n    positiveFeedbackValue: 0,\n    blockVision: true,\n  };\n  goodIncrement = () => {\n    this.setState(prevState => ({\n      goodValue: prevState.goodValue + 1,\n      blockVision: false,\n    }));\n    this.countTotalFeedback();\n  };\n  neutralIncrement = () => {\n    this.setState(prevState => ({\n      neutralValue: prevState.neutralValue + 1,\n      blockVision: false,\n    }));\n    this.countTotalFeedback();\n  };\n  badIncrement = () => {\n    this.setState(prevState => ({\n      badValue: prevState.badValue + 1,\n      blockVision: false,\n    }));\n    this.countTotalFeedback();\n  };\n  countTotalFeedback = () => {\n    this.setState(prevState => ({\n      totalValue:\n        prevState.goodValue + prevState.neutralValue + prevState.badValue,\n    }));\n    this.countPositiveFeedbackPercentage();\n  };\n  countPositiveFeedbackPercentage = () => {\n    this.setState(prevState => ({\n      positiveFeedbackValue: (prevState.goodValue / prevState.totalValue) * 100,\n    }));\n  };\n  render() {\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={{\n              good: this.goodIncrement,\n              neutral: this.neutralIncrement,\n              bad: this.badIncrement,\n            }}\n          />\n        </Section>\n        <Section title={'Statistics'}>\n          {this.state.blockVision ? (\n            <Notification message=\"There is no feedback\" />\n          ) : (\n            <Statistics\n              good={this.state.goodValue}\n              neutral={this.state.neutralValue}\n              bad={this.state.badValue}\n              total={this.state.totalValue}\n              positivePercentage={this.state.positiveFeedbackValue}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedBackList\":\"FeedBack_FeedBackList__3sKvw\",\"Button\":\"FeedBack_Button__2NwtT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1GA8u\",\"Container\":\"Section_Container__2RL2N\",\"Title\":\"Section_Title__2NXkY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatisticsList\":\"Statistics_StatisticsList__3WmGH\"};"],"sourceRoot":""}